# -*- coding: utf-8 -*-
# Generated by Django 1.11.17 on 2019-04-24 16:24
# Customized by tfeiler, to preload the data
#
# run via:
#   python manage.py migrate
# reverse (to previous migration) with something like:
#   python manage.py migrate animal 0028_duration_observation_relocation

from __future__ import unicode_literals

from django.db import migrations, models

def reverse_populate_multigen(apps, schema_editor):
    # no custom reversal code needed
    pass

# previously experiment types Rp (reproductive) and Dv (developmental) were always multi_generational, so
# we'll set those to be so in the database now that it's an actual editable field.
def populate_multigen(apps, schema_editor):
    print("\n")
    Experiment = apps.get_model('animal', 'Experiment')

    experiment_idx = 0
    for experiment in Experiment.objects.filter(type__in=("Rp", "Dv")):
        print("checking on [%s], [%s], [%s], [%s]" % (experiment_idx, experiment.id, experiment.name, experiment.type))
        experiment.has_multiple_generations = True
        experiment.save()

        experiment_idx = experiment_idx + 1

class Migration(migrations.Migration):

    dependencies = [
        ('animal', '0028_duration_observation_relocation'),
    ]

    operations = [
        migrations.AddField(
            model_name='experiment',
            name='has_multiple_generations',
            field=models.BooleanField(default=False),
        ),
        migrations.RunPython(populate_multigen, reverse_populate_multigen)
    ]
