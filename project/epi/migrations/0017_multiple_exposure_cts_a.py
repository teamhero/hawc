# -*- coding: utf-8 -*-
# Generated by Django 1.11.5 on 2018-12-21 19:48
# Customized by tfeiler, to split into 3, controlling the order, and adding data migration
#
# run via:
#   python manage.py migrate
# reverse (to previous migration) with something like:
#   python manage.py migrate epi 0016_animal_form_instructions_updates
#
# this migration is split into 3 b/c otherwise it isn't really reversible...postgres doesn't
# love altering table constraints (the foreign key) and adding/removing fields all in the same
# transaction, and each migration is wrapped in a transaction. Splitting it this way where:
#
# a) creates the new epi_centraltendency table and adds the foreign key relationship to epi_exposure
# b) moves the estimate/variance/lower_ci/etc. values from epi_exposure->epi_centraltendency
# c) drops the old estimate/variance/lower_ci/etc. columns from epi_exposure
#
# this way it works and is reversible.

from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion

class Migration(migrations.Migration):

    dependencies = [
        ('epi', '0017_result_metric_units'),
    ]

    operations = [
        migrations.CreateModel(
            name='CentralTendency',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('estimate', models.FloatField(blank=True, help_text="Use the central tendency estimate most commonly reported in the set of studies (typically mean or median). Ex. 0.78<span class='help-text-notes'>Note: type and units recorded in other fields</span><span class='important-note'>This field is commonly used in HAWC visualizations</span>", null=True)),
                ('estimate_type', models.PositiveSmallIntegerField(choices=[(0, None), (1, 'mean'), (2, 'geometric mean'), (3, 'median'), (5, 'point'), (4, 'other')], default=0, verbose_name='Central estimate type')),
                ('variance', models.FloatField(blank=True, null=True, verbose_name='Variance')),
                ('variance_type', models.PositiveSmallIntegerField(choices=[(0, None), (1, 'SD'), (2, 'SE'), (3, 'SEM'), (4, 'GSD'), (5, 'other')], default=0)),
                ('lower_ci', models.FloatField(blank=True, help_text='Numerical value', null=True, verbose_name='Lower CI')),
                ('upper_ci', models.FloatField(blank=True, help_text='Numerical value', null=True, verbose_name='Upper CI')),
                ('lower_range', models.FloatField(blank=True, help_text='Numerical value', null=True, verbose_name='Lower range')),
                ('upper_range', models.FloatField(blank=True, help_text='Numerical value', null=True, verbose_name='Upper range')),
                ('description', models.TextField(blank=True, help_text='Provide additional exposure or extraction details if necessary')),
            ],
            options={
                'verbose_name': 'Central Tendency',
                'verbose_name_plural': 'Central Tendencies',
                'ordering': ('estimate_type',),
            },
        ),
        migrations.AddField(
            model_name='centraltendency',
            name='exposure',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='central_tendencies', to='epi.Exposure'),
        ),
    ]
