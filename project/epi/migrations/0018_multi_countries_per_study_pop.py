# -*- coding: utf-8 -*-
# Generated by Django 1.11.17 on 2019-04-17 18:15
# customized by tfeiler
#
# currently not reversible -- re-adding the "country" field causes an IntegrityError b/c it can't
# be null. There must be a way to control creation during migration reversal (basically create it 
# allowing null, then run reverse_migrate_studypop_countries, then force non-null) but I don't know
# how to make that work. Deferring for now.

from __future__ import unicode_literals

from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('epi', '0017_multiple_exposure_cts_c'),
    ]

    def migrate_studypop_countries(apps, schema_editor):
        print("migrating studypop country->countries values...")
        StudyPopulation = apps.get_model('epi', 'StudyPopulation')

        for sp in StudyPopulation.objects.all():
            print("sp [%s]/[%s] has country [%s]/[%s]/[%s]" % (sp.id, sp.name, sp.country.id, sp.country.code, sp.country.name))

            sp.countries.add(sp.country)
            sp.save()
        print("done migrating studypop country->countries values!")

    """
    def reverse_migrate_studypop_countries(apps, schema_editor):
        print("migrating studypop countries->country values...")
        StudyPopulation = apps.get_model('epi', 'StudyPopulation')

        for sp in StudyPopulation.objects.all():
            countries = sp.countries

            print("sp [%s]/[%s] has %s countries defined" % (sp.id, sp.name, len(countries)))

            if len(countries) > 0:
                if len(countries) > 1:
                    print("WARNING - multiple countries defined, only first will be preserved during migration reversal!")
                firstCountry = sp.countries[0]

                sp.country = firstCountry
                sp.save()
        print("done migrating studypop countries->country values!")
    """

    operations = [
        migrations.AddField(
            model_name='studypopulation',
            name='countries',
            field=models.ManyToManyField(blank=True, to='epi.Country'),
        ),
        migrations.RunPython(migrate_studypop_countries),#, reverse_migrate_studypop_countries),
        migrations.RemoveField(
            model_name='studypopulation',
            name='country',
        ),
    ]
