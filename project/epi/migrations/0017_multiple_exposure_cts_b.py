# -*- coding: utf-8 -*-
# Generated by Django 1.11.5 on 2018-12-21 19:48
# Customized by tfeiler, to split into 3, controlling the order, and adding data migration
#
# run via:
#   python manage.py migrate
# reverse (to previous migration) with something like:
#   python manage.py migrate epi 0016_animal_form_instructions_updates

from __future__ import unicode_literals
from pprint import pprint

from django.db import migrations, models
import django.db.models.deletion

# for every exposure, make a new associated CT and move the migrating fields into it
def migrate_ct_values(apps, schema_editor):
    print("migrating ct values...")
    Exposure = apps.get_model('epi', 'Exposure')
    CentralTendency = apps.get_model('epi', 'CentralTendency')
    exposure_idx = 0
    for exposure in Exposure.objects.all():
        ct = CentralTendency()
        ct.exposure = exposure
        ct.estimate = exposure.estimate
        ct.estimate_type = exposure.estimate_type
        ct.variance = exposure.variance
        ct.variance_type = exposure.variance_type
        ct.lower_ci = exposure.lower_ci
        ct.upper_ci = exposure.upper_ci
        ct.lower_range = exposure.lower_range
        ct.upper_range = exposure.upper_range
        ct.description = exposure.description
        ct.save()
        print("migrated exposure %s/%s -> ct %s" % (exposure.id, exposure.name, ct))

        exposure_idx = exposure_idx + 1
    print("done migrating cts from exposure objects!")

def reverse_migrate_ct_values(apps, schema_editor):
    Exposure = apps.get_model('epi', 'Exposure')
    CentralTendency = apps.get_model('epi', 'CentralTendency')

    exposure_idx = 0
    for exposure in Exposure.objects.all():
        cts = list(exposure.central_tendencies.all())

        if len(cts) > 0:
            if len(cts) > 1:
                print("!!! WARNING !!! exposure: [" + str(exposure.id) + "]/[" + exposure.name + "] has multiple defined central tendencies. Only the first will be preserved!")

            firstCt = cts[0]
            exposure.estimate = firstCt.estimate
            exposure.estimate_type = firstCt.estimate_type
            exposure.variance = firstCt.variance
            exposure.variance_type = firstCt.variance_type
            exposure.lower_ci = firstCt.lower_ci
            exposure.upper_ci = firstCt.upper_ci
            exposure.lower_range = firstCt.lower_range
            exposure.upper_range = firstCt.upper_range
            exposure.description = firstCt.description

            exposure.save()

        exposure_idx = exposure_idx + 1

class Migration(migrations.Migration):

    dependencies = [
        ('epi', '0017_multiple_exposure_cts_a'),
    ]

    operations = [
        migrations.RunPython(migrate_ct_values, reverse_migrate_ct_values),
    ]
